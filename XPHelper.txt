// String creation
// Day resetters
!CREATE STRING xph-day ONCE WITH test
!CREATE STRING xph-daytest ONCE WITH test

// Trackers
!CREATE STRING xph-dailyxp ONCE WITH 0
!CREATE STRING xph-dailyquests ONCE WITH 0
!CREATE STRING xph-dailychallenges ONCE WITH 0
!CREATE STRING xph-dailychallengesleft ONCE WITH 10
!CREATE STRING xph-dailycoins ONCE WITH 0
!CREATE STRING xph-dailytips ONCE WITH 0
!CREATE STRING xph-dailytipssent ONCE WITH 0

// XP Goal
!CREATE STRING xph-xpgoal ONCE WITH 0
!CREATE STRING xph-xpgoalprogress ONCE WITH 0

// Totals
!CREATE STRING xph-totalxp ONCE WITH 0
!CREATE STRING xph-totalquests ONCE WITH 0
!CREATE STRING xph-totalchallenges ONCE WITH 0
!CREATE STRING xph-totalcoins ONCE WITH 0
!CREATE STRING xph-totaltips ONCE WITH 0
!CREATE STRING xph-totaltipssent ONCE WITH 0
!CREATE STRING xph-totalbags ONCE WITH 0
!CREATE STRING xph-totalboxes ONCE WITH 0

// Toggles
!CREATE STRING xph-challengeinfo ONCE WITH true
!CREATE STRING xph-tipinfo ONCE WITH true
!CREATE STRING xph-questinfo ONCE WITH true
!CREATE STRING xph-deliveryopen ONCE WITH true
!CREATE STRING xph-deliverywarning ONCE WITH true

// Delivery man tracker
!CREATE STRING xph-dailyvoted ONCE WITH false
!CREATE STRING xph-totalvotes ONCE WITH 0
!CREATE STRING xph-dailiesclaimed ONCE WITH false
!CREATE STRING xph-totaldailies ONCE WITH 0
!CREATE STRING xph-dailycard ONCE WITH false
!CREATE STRING xph-totalcard ONCE WITH 0
!CREATE STRING xph-dailydismissed ONCE WITH false

// Mystery Boxes
!CREATE STRING xph-samereward ONCE WITH test
!CREATE STRING xph-dust ONCE WITH test
!CREATE STRING xph-size ONCE WITH 10
!CREATE STRING xph-currentpage ONCE WITH 1
!CREATE STRING xph-cannextpage ONCE WITH false
!CREATE STRING xph-canprevpage ONCE WITH false
!CREATE STRING xph-prevskip ONCE WITH 0

// World load setup
trigger onWorldFirstLoad(<list=XPHelper>testForNewDay) {
  // chat testing for new day
  {string[xph-daytest]}.set({date})
  if ({string[xph-daytest]} != {string[xph-day]}) 
    // chat &aIt's a new day!
    {string[xph-day]}.save({date})
	// chat {string[xph-day]}
	wait 40
	  chat &e&m{br}
	  chat &aXP earned yesterday: &3{string[xph-dailyxp]}
	  chat &aQuests completed yesterday: &e{string[xph-dailyquests]}
	  chat &aChallenges completed yesterday: &e{string[xph-dailychallenges]}
	  chat &aCoins gained yesterday: &e{string[xph-dailycoins]}
	  chat &aTips received yesterday: &e{string[xph-dailytips]}
	  chat &e&m{br}
	  
	  {string[xph-dailyvoted]}.set(false)
	  {string[xph-dailiesclaimed]}.set(false)
	  {string[xph-dailycard]}.set(false)
	  {string[xph-dailydismissed]}.set(false)
	  {string[xph-dailyxp]}.set(0)
	  {string[xph-dailyquests]}.set(0)
	  {string[xph-dailychallenges]}.set(0)
	  {string[xph-dailycoins]}.set(0)
	  {string[xph-dailytips]}.set(0)
	  {string[xph-dailytipssent]}.set(0)
	  {string[xph-dailychallengesleft]}.save(10)
	end
  else
    // chat &cSame day!
  end
}

trigger onWorldFirstLoad(import stuff) {
  {list[xph-mysteryboxhistory]}.load(./mods/ChatTriggers/Imports/XPHelper/Data/MysteryBoxHistory.txt)
  {list[xph-rewardcardhistory]}.load(./mods/ChatTriggers/Imports/XPHelper/Data/RewardCardHistory.txt)
}

// Debug commands
trigger other(<list=XPHelper>xph testnewday) {
  trigger testForNewDay
}

trigger other(<list=XPHelper>xph setday($day)) {
  {string[xph-day]}.save($day)
  chat {string[xph-day]}
}

// Aliases
trigger other(<list=XPHelper>xphelper) {
  trigger xph
}

trigger other(<list=XPHelper>xpstatus) {
  trigger xph status
}

trigger other(<list=XPHelper>xpprogress) {
  trigger xph xpgoal progress
}

// Commands

// Settings
trigger other(<list=XPHelper>xph) {
  chat {msg(15)}
  chat {msg(14)}
  chat {msg(13)}
  chat {msg(12)}
  chat {msg(11)}
  chat {msg(10)}
  chat {msg(9)}
  chat {msg(8)}
  chat {msg(7)}
  chat {msg(6)}
  chat {msg(5)}
  chat {msg(4)}
  chat {msg(3)}
  chat {msg(2)}
  chat {msg(1)}
  chat {msg(0)}
  chat &e&m{br}
  chat <center> &aXP&bHelper
  chat clickable(&b[SETTINGS],run_command,/tr xph settings,&bManage XPHelper settings)
  chat
  chat clickable(&a[STATS],run_command,/tr xph status,&aView your daily XP stats)
  chat
  chat clickable(&6[INFO],run_command,/tr xph information,&6View your information)
  chat
  chat clickable(&c[GOALS],run_command,/tr xph xpgoals,&cView the XP goal menu)
  chat
  chat clickable(&2[QUESTS],run_command,/tr xph quests,&2View the Quests menu)
  chat &e&m{br}
}

trigger other(<list=XPHelper>xph settings) {
  chat {msg(15)}
  chat {msg(14)}
  chat {msg(13)}
  chat {msg(12)}
  chat {msg(11)}
  chat {msg(10)}
  chat {msg(9)}
  chat {msg(8)}
  chat {msg(7)}
  chat {msg(6)}
  chat {msg(5)}
  chat {msg(4)}
  chat {msg(3)}
  chat {msg(2)}
  chat {msg(1)}
  chat {msg(0)}
  chat &e&m{br}
  chat <center> &bSettings
  chat clickable(&aInformation,run_command,/tr xph settings information,&aToggle information popups)
  chat
  chat clickable(&6Delivery Man,run_command,/tr xph settings deliveryman,&aToggle Delivery Man settings)
  chat
  chat clickable(&c« Back,run_command,/tr xph,&cBack)
  chat &e&m{br}
}

trigger other(<list=XPHelper>xph settings information) {
  chat {msg(15)}
  chat {msg(14)}
  chat {msg(13)}
  chat {msg(12)}
  chat {msg(11)}
  chat {msg(10)}
  chat {msg(9)}
  chat {msg(8)}
  chat {msg(7)}
  chat {msg(6)}
  chat {msg(5)}
  chat {msg(4)}
  chat {msg(3)}
  chat {msg(2)}
  chat {msg(1)}
  chat {msg(0)}
  chat &e&m{br}
  chat <center>&aInformation
  if ({string[xph-challengeinfo]} == true)
    chat clickable(&a[ON],run_command,/tr xph set setting(challengeinfo,information),&7Turn &cOFF) &7- &bSpecial information when you complete a challenge
  else
    chat clickable(&c[OFF],run_command,/tr xph set setting(challengeinfo,information),&7Turn &aON) &7- &bSpecial information when you complete a challenge
  end
  if ({string[xph-tipinfo]} == true)
    chat clickable(&a[ON],run_command,/tr xph set setting(tipinfo,information),&7Turn &cOFF) &7- &bSpecial information when you receive a tip
  else
    chat clickable(&c[OFF],run_command,/tr xph set setting(tipinfo,information),&7Turn &aON) &7- &bSpecial information when you receive a tip
  end
  if ({string[xph-questinfo]} == true)
    chat clickable(&a[ON],run_command,/tr xph set setting(questinfo,information),&7Turn &cOFF) &7- &bSpecial information when you complete a quest
  else
    chat clickable(&c[OFF],run_command,/tr xph set setting(questinfo,information),&7Turn &aON) &7- &bSpecial information when you complete a quest
  end
  chat
  chat clickable(&c« Back,run_command,/tr xph settings,&cBack)
  chat &e&m{br}
}

trigger other(<list=XPHelper>xph settings deliveryman) {
  chat {msg(15)}
  chat {msg(14)}
  chat {msg(13)}
  chat {msg(12)}
  chat {msg(11)}
  chat {msg(10)}
  chat {msg(9)}
  chat {msg(8)}
  chat {msg(7)}
  chat {msg(6)}
  chat {msg(5)}
  chat {msg(4)}
  chat {msg(3)}
  chat {msg(2)}
  chat {msg(1)}
  chat {msg(0)}
  chat &e&m{br}
  chat <center>&6Delivery Man
  if ({string[xph-deliveryopen]} == true)
    chat clickable(&a[ON],run_command,/tr xph set setting(deliveryopen,deliveryman),&7Turn &cOFF) &7- &bAutomatically open Delivery Man links
  else
    chat clickable(&c[OFF],run_command,/tr xph set setting(deliveryopen,deliveryman),&7Turn &aON) &7- &bAutomatically open Delivery Man links
  end
  if ({string[xph-deliverywarning]} == true)
    chat clickable(&a[ON],run_command,/tr xph set setting(deliverywarning,deliveryman),&7Turn &cOFF) &7- &bWarns you if you have not claimed daily rewards or voted yet when you switch lobbies.
  else
    chat clickable(&c[OFF],run_command,/tr xph set setting(deliverywarning,deliveryman),&7Turn &aON) &7- &bWarns you if you have not claimed daily rewards or voted yet when you switch lobbies.
  end
  chat
  chat clickable(&c« Back,run_command,/tr xph settings,&cBack)
  chat &e&m{br}
}

// Toggles
trigger other(<list=XPHelper>xph set setting($setting,$menu)) {
  if ({string[xph-$setting]} == true)
    {string<xph-$setting>}.save(false)
  else
    {string<xph-$setting>}.save(true)
  end
  trigger xph settings $menu
}

trigger other(<list=XPHelper>xph status) {
  chat {msg(15)}
  chat {msg(14)}
  chat {msg(13)}
  chat {msg(12)}
  chat {msg(11)}
  chat {msg(10)}
  chat {msg(9)}
  chat {msg(8)}
  chat {msg(7)}
  chat {msg(6)}
  chat {msg(5)}
  chat {msg(4)}
  chat {msg(3)}
  chat {msg(2)}
  chat {msg(1)}
  chat {msg(0)}
  chat &e&m{br}
  chat &aTotal XP gained today: &9{string[xph-dailyxp]}
  chat &eTotal challenges completed today: &b{string[xph-dailychallenges]}
  chat &eTotal challenges left: &b{string[xph-dailychallengesleft]}
  chat &aTotal quests completed today: &e{string[xph-dailyquests]}
  chat &aTotal coins gained today: &6{string[xph-dailycoins]}
  chat &aTotal tips received today: &e{string[xph-dailytips]}
  chat &aTotal tips sent today: &e{string[xph-dailytipssent]}
  chat
  chat clickable(&c[LIFETIME STATS],run_command,/tr xph status lifetime,&cView your lifetime stats)
  chat 
  chat clickable(&c« Back,run_command,/tr xph,&cBack)
  chat &e&m{br}
}

trigger other(<list=XPHelper>xph status lifetime) {
  chat {msg(15)}
  chat {msg(14)}
  chat {msg(13)}
  chat {msg(12)}
  chat {msg(11)}
  chat {msg(10)}
  chat {msg(9)}
  chat {msg(8)}
  chat {msg(7)}
  chat {msg(6)}
  chat {msg(5)}
  chat {msg(4)}
  chat {msg(3)}
  chat {msg(2)}
  chat {msg(1)}
  chat {msg(0)}
  chat &e&m{br}
  chat &aTotal XP gained: &9{string[xph-totalxp]}
  chat &eTotal challenges completed: &b{string[xph-totalchallenges]}
  chat &aTotal quests completed: &e{string[xph-totalquests]}
  chat &aTotal coins gained: &6{string[xph-totalcoins]}
  chat &aTotal tips received: &e{string[xph-totaltips]}
  chat &aTotal tips sent: &e{string[xph-totaltipssent]}
  chat
  chat &aTotal votes: &e{string[xph-totalvotes]}
  chat &aTotal reward cards claimed: &e{string[xph-totalcard]}
  chat &atotal daily rewards claimed: &e{string[xph-totaldailies]}
  chat
  chat &aTotal XP Bags opened: &e{string[xph-totalbags]}
  chat
  chat &aTotal Mystery Boxes opened: &e{string[xph-totalboxes]}
  chat
  chat clickable(&b[DAILY STATS],run_command,/tr xph status,&bView your daily stats)
  chat
  chat clickable(&c« Back,run_command,/tr xph,&cBack)
  chat &e&m{br}
}

trigger other(<list=XPHelper>xph xpgoals) {
  chat {msg(15)}
  chat {msg(14)}
  chat {msg(13)}
  chat {msg(12)}
  chat {msg(11)}
  chat {msg(10)}
  chat {msg(9)}
  chat {msg(8)}
  chat {msg(7)}
  chat {msg(6)}
  chat {msg(5)}
  chat {msg(4)}
  chat {msg(3)}
  chat {msg(2)}
  chat {msg(1)}
  chat {msg(0)}
  chat &e&m{br}
  chat <center>&cXP Goal Menu
  chat
  if ({string[xph-xpgoal]} == 0)
    chat &aNo goal is currently set. Would you like to create a new goal?
	chat clickable(&c[CREATE A GOAL],suggest_command,/tr xph setxpgoal <amount>,&cSet a new XP goal)
  else
    chat &aCurrent progress: &e{string[xph-xpgoalprogress]}&a/&e{string[xph-xpgoal]} ({string[xph-xpgoalprogress]}./({string[xph-xpgoal]}).*(100).round()%)
	chat &aXP left: &e{string[xph-xpgoal]}.-({string[xph-xpgoalprogress]})
  end
  chat
  chat clickable(&c« Back,run_command,/tr xph,&cBack)
  chat &e&m{br}
}

trigger other(<list=XPHelper>xph setxpgoal($goal)) {
  if ({string[xph-xpgoal]} == 0)
    {string[xph-xpgoal]}.save($goal)
    chat &aYou've set a new XP goal for &e$goal!
	sound random.levelup
  else
    sound <pitch=-2>note.bass
    chat &e&m{br}
    chat &eAre you sure you want to update your current goal?
	chat &c&lThis will reset your progress! &r&e({string[xph-xpgoalprogress]}/{string[xph-xpgoal]}, {string[xph-xpgoalprogress]}./({string[xph-xpgoal]}).*(100).round()%)
	chat clickable(&a[YES],run_command,/tr xph setxpgoal confirm $goal,&aUpdate your current goal) clickable(&c[NO],run_command,/tr xph denysetxpgoal,&cCancel)
	chat &e&m{br}
  end
}

trigger other(<list=XPHelper>xph setxpgoal confirm($goal)) {
  {string[xph-xpgoal]}.set($goal)
  {string[xph-xpgoalprogress]}.save(0)
  chat &aSet a new XP goal for $goal and cleared your progress.
  sound random.levelup
}

trigger other(<list=XPHelper>xph denysetxpgoal) {
  chat &cCancelled.
}

trigger other(<list=XPHelper>xph xpgoal progress) {
  if ({string[xph-xpgoal]} == 0)
    chat &aYou currently do not have a goal set.
  else
    chat &aProgress: &e{string[xph-xpgoalprogress]}&a/&e{string[xph-xpgoal]} ({string[xph-xpgoalprogress]}./({string[xph-xpgoal]}).*(100).round()%)
  end
}

trigger other(<list=XPHelper>xph quests) {
  chat {msg(15)}
  chat {msg(14)}
  chat {msg(13)}
  chat {msg(12)}
  chat {msg(11)}
  chat {msg(10)}
  chat {msg(9)}
  chat {msg(8)}
  chat {msg(7)}
  chat {msg(6)}
  chat {msg(5)}
  chat {msg(4)}
  chat {msg(3)}
  chat {msg(2)}
  chat {msg(1)}
  chat {msg(0)}
  chat &e&m{br}
  chat &cComing soon!
  chat
  chat clickable(&c« Back,run_command,/tr xph,&cBack)
  chat &e&m{br}
}

trigger other(<list=XPHelper>xph information) {
  chat {msg(15)}
  chat {msg(14)}
  chat {msg(13)}
  chat {msg(12)}
  chat {msg(11)}
  chat {msg(10)}
  chat {msg(9)}
  chat {msg(8)}
  chat {msg(7)}
  chat {msg(6)}
  chat {msg(5)}
  chat {msg(4)}
  chat {msg(3)}
  chat {msg(2)}
  chat {msg(1)}
  chat {msg(0)}
  chat &e&m{br}
  chat <center>&6Information
  chat clickable(&6Reward Card History,run_command,/tr xph rewardcardhistory,&6View your previous Reward Cards)
  chat 
  chat clickable(&bMystery Box History,run_command,/tr xph mysteryboxhistory,&bView your previous Mystery Box rewards)
  chat
  chat clickable(&c« Back,run_command,/tr xph,&cBack)
  chat &e&m{br}
}

trigger other(xph mysteryboxhistory($amount)) {
  if ({list[xph-mysteryboxhistory]}.size().=(0)
	chat {msg(15)}
	chat {msg(14)}
	chat {msg(13)}
	chat {msg(12)}
	chat {msg(11)}
	chat {msg(10)}
	chat {msg(9)}
	chat {msg(8)}
	chat {msg(7)}
	chat {msg(6)}
	chat {msg(5)}
	chat {msg(4)}
	chat {msg(3)}
	chat {msg(2)}
	chat {msg(1)}
	chat {msg(0)}
	chat &e&m{br}
    chat &cYou haven't opened any mystery boxes yet.
	chat
	chat clickable(&c« Back,run_command,/tr xph information,&cBack)
	chat &e&m{br}
	return
  end
  do {string[xph-size]}.set({list[xph-mysteryboxhistory]}.size())
  if ($amount.>({string[xph-size]}))
    chat &cYou don't have&a $amount &cpages, showing &a{string[size]} &cpages.
  else
    do {string[size]}.set($amount)
  end
  trigger xph history mystery box({string[xph-size]})
}

trigger other(xph mysteryboxhistory) {
  if ({list[xph-mysteryboxhistory]}.size().equals(0))
	chat {msg(15)}
	chat {msg(14)}
	chat {msg(13)}
	chat {msg(12)}
	chat {msg(11)}
	chat {msg(10)}
	chat {msg(9)}
	chat {msg(8)}
	chat {msg(7)}
	chat {msg(6)}
	chat {msg(5)}
	chat {msg(4)}
	chat {msg(3)}
	chat {msg(2)}
	chat {msg(1)}
	chat {msg(0)}
	chat &e&m{br}
    chat &cYou haven't opened any mystery boxes yet.
	chat
	chat clickable(&c« Back,run_command,/tr xph information,&cBack)
	chat &e&m{br}
    return
  end
  trigger xph reset skip
  do {string[xph-size]}.set({list[xph-mysteryboxhistory]}.size())
  if ({string[xph-size]}.>(10))
    do {string[xph-size]}.set(10)
  end
  trigger xph history mystery box({string[xph-size]})
}

trigger other(<list=XPHelper>xph setmysteryboxhistory nextpage) {
  {string[xph-currentpage]}.+(1).set(~)
  {string[xph-prevskip]}.set({string[xph-size]})
  {string[xph-size]}.+(10).save(~)
  if ({string[xph-size]}.>=({list[xph-mysteryboxhistory]}.size()))
    {string[xph-size]}.set({list[xph-mysteryboxhistory]}.size())
	{string[xph-prevskip]}.save({string[xph-size]}.-(10))
  end
  trigger xph history mystery box({string[xph-size]})
}

trigger other(<list=XPHelper>xph setmysteryboxhistory prevpage) {
  {string[xph-currentpage]}.-(1).set(~)
  {string[xph-prevskip]}.-(10).set(~)
  {string[xph-size]}.-(10).save(~)
  if ({string[xph-prevskip]}.<(0)) 
    {string[xph-prevskip]}.set(0)
	{string[xph-size]}.save(10)
  end
  trigger xph history mystery box({string[xph-size]})
}

trigger other(xph reset skip) {
  {string[xph-currentpage]}.set(1)
  {string[xph-prevskip]}.set(0)
  {string[xph-size]}.save(10)
}

trigger other(xph skip) {
  chat {string[xph-prevskip]} {string[xph-size]} {string[xph-currentpage]}
}

trigger other(<list=XPHelper>xph history mystery box($size)) {
  chat {msg(15)}
  chat {msg(14)}
  chat {msg(13)}
  chat {msg(12)}
  chat {msg(11)}
  chat {msg(10)}
  chat {msg(9)}
  chat {msg(8)}
  chat {msg(7)}
  chat {msg(6)}
  chat {msg(5)}
  chat {msg(4)}
  chat {msg(3)}
  chat {msg(2)}
  chat {msg(1)}
  chat {msg(0)}
  chat &e&m{br}
  chat <center>&bMystery Box History
  chat
  chat &6Past Mystery Box rewards:
  do {string[xph-skip]}.set({list[xph-mysteryboxhistory]}.size().-($size))
  // {string[xph-currentsize]}.set($size.+(1))
  // do $size.set(1)
  for $reward : {list[xph-mysteryboxhistory]}
    if ({string[xph-skip]}.=(0))
	// chat {string[xph-prevskip]} $size
	if ({string[xph-prevskip]}.<($size))
	  chat &e$size. $reward
	  // do $size.+(1).set(~)
	  do $size.-(1).set(~)
	  // if ($size.=({string[xph-currentsize]}))
	  if ($size.=(0)
	    chat 
		chat clickable(&c« Back,run_command,/tr xph information,&cBack)
		chat &e&m{br}
	    break
	  end
	else
	  do $size.-(1).set(~)
	end
	else
	  do {string[xph-skip]}.-(1).set(~)
	end
  end
  chat
  //{string[xph-currentpage]}.set({string[xph-size]}./(10).floor())
  if ({string[xph-prevskip]} == 0)
    {string[xph-canprevpage]}.set(false)
  else
    {string[xph-canprevpage]}.set(true)
  end
  if ({string[xph-size]}.>=({list[xph-mysteryboxhistory]}.size()))
    {string[xph-cannextpage]}.set(false)
  else
    {string[xph-cannextpage]}.set(true)
  end
  if ({string[xph-canprevpage]} && {string[xph-cannextpage]})
    chat <center>clickable(&6<,run_command,/tr xph setmysteryboxhistory prevpage,&6Previous Page)&6 Page {string[xph-currentpage]} clickable(&6>,run_command,/tr xph setmysteryboxhistory nextpage,&6Next Page)
  elseif ({string[xph-canprevpage]} && !{string[xph-cannextpage]})
    chat <center>clickable(&6<,run_command,/tr xph setmysteryboxhistory prevpage,&6Previous Page)&6 Page {string[xph-currentpage]} hover(&7>,&7On last page already.)
  elseif (!{string[xph-canprevpage]} && {string[xph-cannextpage]})
    chat <center>hover(&7<,&7On first page already.)&6 Page {string[xph-currentpage]} clickable(&6>,run_command,/tr xph setmysteryboxhistory nextpage,&6Next Page)
  elseif (!{string[xph-canprevpage]} && !{string[xph-cannextpage]})
    chat <center>hover(&7<,&7On first page already.)&6 Page {string[xph-currentpage]} hover(&7>,&7On last page already.)
  end
  chat 
  chat clickable(&c« Back,run_command,/tr xph information,&cBack)
  chat &e&m{br}
}

>

trigger other(<list=XPHelper>xph rewardcardhistory($amount)) {
  if ({list[xph-rewardcardhistory]}.size().=(0)
	chat {msg(15)}
	chat {msg(14)}
	chat {msg(13)}
	chat {msg(12)}
	chat {msg(11)}
	chat {msg(10)}
	chat {msg(9)}
	chat {msg(8)}
	chat {msg(7)}
	chat {msg(6)}
	chat {msg(5)}
	chat {msg(4)}
	chat {msg(3)}
	chat {msg(2)}
	chat {msg(1)}
	chat {msg(0)}
	chat &e&m{br}
    chat &cYou haven't received any reward cards yet.
	chat
	chat clickable(&c« Back,run_command,/tr xph information,&cBack)
	chat &e&m{br}
	return
  end
  do {string[xph-size]}.set({list[xph-rewardcardhistory]}.size())
  if ($amount.>({string[xph-size]}))
    chat &cYou don't have&a $amount &cpages, showing &a{string[size]} &cpages.
  else
    do {string[size]}.set($amount)
  end
  trigger xph history mystery box({string[xph-size]})
}

trigger other(xph rewardcardhistory) {
  if ({list[xph-rewardcardhistory]}.size().equals(0))
	chat {msg(15)}
	chat {msg(14)}
	chat {msg(13)}
	chat {msg(12)}
	chat {msg(11)}
	chat {msg(10)}
	chat {msg(9)}
	chat {msg(8)}
	chat {msg(7)}
	chat {msg(6)}
	chat {msg(5)}
	chat {msg(4)}
	chat {msg(3)}
	chat {msg(2)}
	chat {msg(1)}
	chat {msg(0)}
	chat &e&m{br}
    chat &cYou haven't received any reward cards yet.
	chat
	chat clickable(&c« Back,run_command,/tr xph information,&cBack)
	chat &e&m{br}
    return
  end
  do {string[xph-size]}.set({list[xph-rewardcardhistory]}.size())
  if ({string[xph-size]}.>(7))
    do {string[xph-size]}.set(7)
  end
  trigger xph history reward cards({string[xph-size]})
}

trigger other(<list=XPHelper>xph history reward cards($size)) {
  chat {msg(15)}
  chat {msg(14)}
  chat {msg(13)}
  chat {msg(12)}
  chat {msg(11)}
  chat {msg(10)}
  chat {msg(9)}
  chat {msg(8)}
  chat {msg(7)}
  chat {msg(6)}
  chat {msg(5)}
  chat {msg(4)}
  chat {msg(3)}
  chat {msg(2)}
  chat {msg(1)}
  chat {msg(0)}
  chat &e&m{br}
  chat <center>&6Reward Card History
  chat &6Past&a $size &6Reward Cards received
  do {string[xph-skip]}.set({list[xph-rewardcardhistory]}.size().-($size))
  do $size.set(1)
  {string[xph-currentsize]}.set($size)
  do {list[xph-rewardcardhistory]}.reverse()
  for $reward : {list[xph-rewardcardhistory]}
    if ({string[xph-skip]}.=(0))
	  chat &e$size. $reward
	  do $size.+(1).set(~)
	  if ($size.=({string[xph-currentsize]}))
	    chat 
		chat clickable(&c« Back,run_command,/tr xph information,&cBack)
		chat &e&m{br}
	    break
	  end
	else
	  do {string[xph-skip]}.-(1).set(~)
	end
  end
  chat 
  chat clickable(&c« Back,run_command,/tr xph information,&cBack)
  chat &e&m{br}
}

// Functions

// Mystery Box detectors
trigger chat(<s>&r&r  &r&71x) {
  do {list[xph-mysteryboxhistory]}.add({msg}.replace(&r&r  &r&71x ))
  do {string[xph-samereward]}.set({msg}.replace(&r&r  &r&71x ))
  do {list[xph-mysteryboxhistory]}.export(./mods/ChatTriggers/Imports/XPHelper/Data/MysteryBoxHistory.txt<compact>)
  {string[xph-totalboxes]}.+(1).save(~)
}

trigger chat(&r&r&7received &r{string[xph-dust]} Mystery Dust&r&r &r&7instead.&r) {
  do {list[xph-mysteryboxhistory]}.remove({list[xph-mysteryboxhistory]}.size().-(1))
  do {string[xph-dust]}.remForm().set(~)
  do {string[xph-samereward]}.replace(&l,&m).set(~)
  do {list[xph-mysteryboxhistory]}.add({string[xph-samereward]}&r &b&l{string[xph-dust]} Mystery Dust)
  do {list[xph-mysteryboxhistory]}.export(./mods/ChatTriggers/Imports/XPHelper/Data/MysteryBoxHistory.txt<compact>)
}

trigger other(<list=XPHelper>clearmysteryboxhistory) {
  do {list[xph-mysteryboxhistory]}.clear()
  do {list[xph-mysteryboxhistory]}.export(./mods/ChatTriggers/Imports/XPHelper/Data/MysteryBoxHistory.txt<compact>)
  chat &aMystery box reward history cleared!
}

// Challenge detectors
trigger chat(<list=XPHelper>\n&r&a{string[challenge]} Challenge Completed!&r\n&r&7 &8+&3{string[xp]}&7&7 Hypixel Experience&r\n&r\n&r&7You can complete &e&e{string[challengesleft]} &7more challenges today.&r\n&r) {
  {string[xph-dailyxp]}.set({string[xph-dailyxp]}.+({string[xp]}))
  {string[xph-dailychallenges]}.set({string[xph-dailychallenges]}.+(1))
  {string[xph-dailychallengesleft]}.set({string[challengesleft]}))
  {string[xph-totalxp]}.set({string[xph-totalxp]}.+({string[xp]}))
  {string[xph-totalchallenges]}.+(1).save(~)
  if ({string[xph-xpgoal]} != 0)
    {string[xph-xpgoalprogress]}.set({string[xph-xpgoalprogress]}.+({string[xp]}))
  end
  if ({string[xph-xpgoalprogress]}.>=({string[xph-xpgoal]}))
  if ({string[xph-xpgoal]} != 0)
    chat &aYou've reached your goal of &e{string[xph-xpgoal]}&a XP! Congratulations!
	sound random.levelup
	{string[xph-xpgoal]}.set(0)
	{string[xph-xpgoalprogress]}.save(0)
  end
  end
  if ({string[xph-challengeinfo]} == true)
    chat &aTotal XP gained today: &9{string[xph-dailyxp]}
    chat &eTotal challenges completed today: &b{string[xph-dailychallenges]}
  end
}

// Challenge detectors
trigger chat(<list=XPHelper>\n&r&a{string[challenge]} Challenge Completed!&r\n&r&7 &8+&3{string[xp]}&7&7 Hypixel Experience&r\n&r\n&r&7You can complete &e&c{string[challengesleft]} &7more challenges today.&r\n&r) {
  {string[xph-dailyxp]}.set({string[xph-dailyxp]}.+({string[xp]}))
  {string[xph-dailychallenges]}.set({string[xph-dailychallenges]}.+(1))
  {string[xph-dailychallengesleft]}.set({string[challengesleft]}))
  {string[xph-totalxp]}.set({string[xph-totalxp]}.+({string[xp]}))
  {string[xph-totalchallenges]}.+(1).save(~)
  if ({string[xph-xpgoal]} != 0)
    {string[xph-xpgoalprogress]}.set({string[xph-xpgoalprogress]}.+({string[xp]}))
  end
  if ({string[xph-xpgoalprogress]}.>=({string[xph-xpgoal]}))
  if ({string[xph-xpgoal]} != 0)
    chat &aYou've reached your goal of &e{string[xph-xpgoal]}&a XP! Congratulations!
	sound random.levelup
	{string[xph-xpgoal]}.set(0)
	{string[xph-xpgoalprogress]}.save(0)
  end
  end
  if ({string[xph-challengeinfo]} == true)
    chat &aTotal XP gained today: &9{string[xph-dailyxp]}
    chat &eTotal challenges completed today: &b{string[xph-dailychallenges]}
  end
}

// Challenge detectors
trigger chat(<list=XPHelper>\n&r&a{string[challenge]} Challenge Completed!&r\n&r&7 &8+&3{string[xp]}&7&7 Hypixel Experience&r\n&r\n&r&7You can complete &e&a{string[challengesleft]} &7more challenges today.&r\n&r) {
  {string[xph-dailyxp]}.set({string[xph-dailyxp]}.+({string[xp]}))
  {string[xph-dailychallenges]}.set({string[xph-dailychallenges]}.+(1))
  {string[xph-dailychallengesleft]}.set({string[challengesleft]}))
  {string[xph-totalxp]}.set({string[xph-totalxp]}.+({string[xp]}))
  {string[xph-totalchallenges]}.+(1).save(~)
  if ({string[xph-xpgoal]} != 0)
    {string[xph-xpgoalprogress]}.set({string[xph-xpgoalprogress]}.+({string[xp]}))
  end
  if ({string[xph-xpgoalprogress]}.>=({string[xph-xpgoal]}))
  if ({string[xph-xpgoal]} != 0)
    chat &aYou've reached your goal of &e{string[xph-xpgoal]}&a XP! Congratulations!
	sound random.levelup
	{string[xph-xpgoal]}.set(0)
	{string[xph-xpgoalprogress]}.save(0)
  end
  end
  if ({string[xph-challengeinfo]} == true)
    chat &aTotal XP gained today: &9{string[xph-dailyxp]}
    chat &eTotal challenges completed today: &b{string[xph-dailychallenges]}
  end
}

// Quest detectors
trigger chat(<list=XPHelper><s>\n&r&a{string[type]} Quest: {string[quest]} Completed!&r\n&r&7 &8+&3{string[xp]}&7&7 Hypixel Experience&r\n&r&7 &8+&6{string[coins]}&7 &7{string[game]} Coins&r) {
  {string[xph-dailyxp]}.set({string[xph-dailyxp]}.+({string[xp]}))
  {string[xph-dailyquests]}.set({string[xph-dailyquests]}.+(1))
  {string[xph-dailycoins]}.set({string[xph-dailycoins]}.+({string[coins]}))
  {string[xph-totalxp]}.set({string[xph-totalxp]}.+({string[xp]}))
  {string[xph-totalquests]}.set({string[xph-totalquests]}.+(1))
  {string[xph-totalcoins]}.+({string[coins]}).save(~)
  if ({string[xph-xpgoal]} != 0)
    {string[xph-xpgoalprogress]}.set({string[xph-xpgoalprogress]}.+({string[xp]}))
  end
  if ({string[xph-xpgoalprogress]}.>=({string[xph-xpgoal]}))
  if ({string[xph-xpgoal]} != 0)
    chat &aYou've reached your goal of &e{string[xph-xpgoal]}&a XP! Congratulations!
	sound random.levelup
	{string[xph-xpgoal]}.set(0)
	{string[xph-xpgoalprogress]}.save(0)
  end
  end
  if ({string[xph-questinfo]} == true)
    chat &aTotal XP gained today: &9{string[xph-dailyxp]}
    chat &aTotal quests completed today: &e{string[xph-dailyquests]}
    chat &aTotal coins gained today: &6{string[xph-dailycoins]}
  end
}

// Tip detectors
trigger chat(<list=XPHelper>&aYou earned &r&e{string[coins]} coins&r&a and &r&9{string[xp]} experience&r&a from {string[game]} tips in the last minute!&r) {
  {string[xph-dailyxp]}.set({string[xph-dailyxp]}.+({string[xp]}))
  {string[xph-dailytips]}.set({string[xph-dailytips]}.+(1))
  {string[xph-dailycoins]}.set({string[xph-dailycoins]}.+({string[coins]}))
  {string[xph-totalxp]}.set({string[xph-totalxp]}.+({string[xp]}))
  {string[xph-totaltips]}.set({string[xph-totaltips]}.+(1))
  {string[xph-totalcoins]}.+({string[coins]}).save(~)
  if ({string[xph-xpgoal]} != 0)
    {string[xph-xpgoalprogress]}.set({string[xph-xpgoalprogress]}.+({string[xp]}))
  end
  if ({string[xph-xpgoalprogress]}.>=({string[xph-xpgoal]}))
  if ({string[xph-xpgoal]} != 0)
    chat &aYou've reached your goal of &e{string[xph-xpgoal]}&a XP! Congratulations!
	sound random.levelup
	{string[xph-xpgoal]}.set(0)
	{string[xph-xpgoalprogress]}.save(0)
  end
  end
  if ({string[xph-tipinfo]} == true)
    chat &aTotal tips received today: &b{string[xph-dailytips]}
    chat &aTotal XP gained today: &9{string[xph-dailyxp]}
    chat &aTotal coins gained today: &6{string[xph-dailycoins]}
  end
}

// Tip detectors
trigger chat(<list=XPHelper>&aYou tipped {string[name]}&r&a in {string[game]}&r) {
  {string[xph-dailytipssent]}.+(1).set(~)
  {string[xph-totaltipssent]}.+(1).set(~)
  {string[xph-dailyxp]}.set({string[xph-dailyxp]}.+(50))
  {string[xph-dailycoins]}.set({string[xph-dailycoins]}.+(15))
  {string[xph-totalxp]}.set({string[xph-totalxp]}.+(50))
  {string[xph-totalcoins]}.+(15).save(~)
  if ({string[xph-xpgoal]} != 0)
    {string[xph-xpgoalprogress]}.set({string[xph-xpgoalprogress]}.+(50))
  end
  if ({string[xph-xpgoalprogress]}.>=({string[xph-xpgoal]}))
  if ({string[xph-xpgoal]} != 0)
    chat &aYou've reached your goal of &e{string[xph-xpgoal]}&a XP! Congratulations!
	sound random.levelup
	{string[xph-xpgoal]}.set(0)
	{string[xph-xpgoalprogress]}.save(0)
  end
  end
}

// Bag detectors
trigger chat(<list=XPHelper>You opened a bag of {string[EXP]} Hypixel Experience!) {
  {string[xph-dailyxp]}.+({string[EXP]}).set(~)
  {string[xph-totalxp]}.+({string[EXP]}).set(~)
  {string[xph-totalbags]}.+(1).save(~)
  chat &aTotal XP gained today: &9{string[xph-dailyxp]}
  if ({string[xph-xpgoal]} != 0)
    {string[xph-xpgoalprogress]}.set({string[xph-xpgoalprogress]}.+({string[EXP]}))
  end
  if ({string[xph-xpgoalprogress]}.>=({string[xph-xpgoal]}))
  if ({string[xph-xpgoal]} != 0)
    chat &aYou've reached your goal of &e{string[xph-xpgoal]}&a XP! Congratulations!
	sound random.levelup
	{string[xph-xpgoal]}.set(0)
	{string[xph-xpgoalprogress]}.save(0)
  end
  end
}

// Delivery man tracker
trigger chat(<list=XPHelper>&r&aYou have successfully claimed &r&32,000 &r&3Hypixel &r&3Experience&r&a and &r&63,000 &r&6Arcade &r&6Coins&r&a!&r) {
  {string[xph-dailiesclaimed]}.set(true)
  {string[xph-dailyxp]}.+(2000).set(~)
  {string[xph-dailycoins]}.+(3000).set(~)
  {string[xph-totalxp]}.+(2000).set(~)
  {string[xph-totalcoins]}.+(3000).set(~)
  {string[xph-totaldailies]}.+(1).save(~)
  chat &a+&e1 dailies claimed (&aTotal: &b{string[xph-totaldailies]}&e)
  if ({string[xph-xpgoal]} != 0)
    {string[xph-xpgoalprogress]}.set({string[xph-xpgoalprogress]}.+(2000))
  end
  if ({string[xph-xpgoalprogress]}.>=({string[xph-xpgoal]}))
  if ({string[xph-xpgoal]} != 0)
    chat &aYou've reached your goal of &e{string[xph-xpgoal]}&a XP! Congratulations!
	sound random.levelup
	{string[xph-xpgoal]}.set(0)
	{string[xph-xpgoalprogress]}.save(0)
  end
  end
}

trigger chat(<list=XPHelper>&6Thanks for supporting the server! You earned &r&95,000 XP&r&6 and 3,000 Arcade Coins!&r) {
  {string[xph-dailyvoted]}.set(true)
  {string[xph-dailyxp]}.+(5000).set(~)
  {string[xph-dailycoins]}.+(3000).set(~)
  {string[xph-totalxp]}.+(5000).set(~)
  {string[xph-totalcoins]}.+(3000).set(~)
  {string[xph-totalvotes]}.+(1).save(~)
  chat &a+&e1 votes (&aTotal: &b{string[xph-totalvotes]}&e)
  if ({string[xph-xpgoal]} != 0)
    {string[xph-xpgoalprogress]}.set({string[xph-xpgoalprogress]}.+(5000))
  end
  if ({string[xph-xpgoalprogress]}.>=({string[xph-xpgoal]}))
  if ({string[xph-xpgoal]} != 0)
    chat &aYou've reached your goal of &e{string[xph-xpgoal]}&a XP! Congratulations!
	sound random.levelup
	{string[xph-xpgoal]}.set(0)
	{string[xph-xpgoalprogress]}.save(0)
  end
  end
}

trigger chat(<list=XPHelper>&fYou have claimed a &r{string[color]}&l{string[card]} &r&freward card!&r) {
  {string[xph-dailycard]}.set(true)
  {string[xph-totalcard]}.+(1).save(~)
  chat &a+&e1 cards claimed (&aTotal: &b{string[xph-totalcard]}&e)
  if ({string[card]} == [Legendary Hypixel EXP])
    {string[xph-dailyxp]}.+(100000).set(~)
	{string[xph-totalxp]}.+(100000).save(~)
    if ({string[xph-xpgoal]} != 0)
       {string[xph-xpgoalprogress]}.set({string[xph-xpgoalprogress]}.+(100000))
    end
  elseif ({string[card]} == [Common Hypixel EXP])
    {string[xph-dailyxp]}.+(10000).set(~)
	{string[xph-totalxp]}.+(10000).save(~)
    if ({string[xph-xpgoal]} != 0)
       {string[xph-xpgoalprogress]}.set({string[xph-xpgoalprogress]}.+(10000))
    end
  elseif ({string[card]} == [Rare Hypixel EXP])
    {string[xph-dailyxp]}.+(20000).set(~)
	{string[xph-totalxp]}.+(20000).save(~)
    if ({string[xph-xpgoal]} != 0)
       {string[xph-xpgoalprogress]}.set({string[xph-xpgoalprogress]}.+(20000))
    end
  elseif ({string[card]} == [Epic Hypixel EXP])
    {string[xph-dailyxp]}.+(40000).set(~)
	{string[xph-totalxp]}.+(40000).save(~)
    if ({string[xph-xpgoal]} != 0)
       {string[xph-xpgoalprogress]}.set({string[xph-xpgoalprogress]}.+(40000))
    end
  end
  if ({string[xph-xpgoalprogress]}.>=({string[xph-xpgoal]}))
  if ({string[xph-xpgoal]} != 0)
    chat &aYou've reached your goal of &e{string[xph-xpgoal]}&a XP! Congratulations!
	sound random.levelup
	{string[xph-xpgoal]}.set(0)
	{string[xph-xpgoalprogress]}.save(0)
  end
  end
  do {list[xph-rewardcardhistory]}.add({string[color]}&l{string[card]})
  do {list[xph-rewardcardhistory]}.export(mods/ChatTriggers/Imports/XPHelper/Data/RewardCardHistory.txt<compact>)
}

trigger onWorldLoad(<list=XPHelper>delivery man tracker) {
  if ({string[xph-deliverywarning]} == true)
  if ({string[xph-dailydismissed]} == false)
  if ({string[xph-dailyvoted]} == false || {string[xph-dailiesclaimed]} == false || {string[xph-dailycard]} == false)
  wait 40
    chat &e&m{br}
	if ({string[xph-dailyvoted]} == false && {string[xph-dailycard]} == false && {string[xph-dailiesclaimed]} == false)
      chat &cYou haven't claimed your daily rewards or voted yet today!
	elseif ({string[xph-dailyvoted]} == false && {string[xph-dailycard]} == false)
	  chat &cYou haven't claimed your daily rewards or voted yet today!
	elseif ({string[xph-dailyvoted]} == false && {string[xph-dailiesclaimed]} == false)
	  chat &cYou haven't claimed your daily rewards or voted yet today!
	elseif ({string[xph-dailiesclaimed]} == false && {string[xph-dailycard]} == false)
	  chat &cYou haven't claimed your daily rewards yet today!
	elseif ({string[xph-dailiesclaimed]} == false)
	  chat &cYou haven't claimed your daily rewards yet today!
	elseif ({string[xph-dailycard]} == false)
	  chat &cYou haven't claimed your daily rewards yet today!
	elseif ({string[xph-dailyvoted]} == false)
	  chat &cYou haven't voted yet today!
	end
	chat \nclickable(&e[WARP],run_command,/delivery,&aWarp to the delivery man)\n\nclickable(&c[Dismiss],run_command,/tr xph dismiss daily warning,&cDismiss this message for the day)
    chat &e&m{br}
  end
  end
  end
  end
}

trigger other(<list=XPHelper>xph dismiss daily warning) {
  chat &e&m{br}
  chat &cDismissed this warning.
  {string[xph-dailydismissed]}.save(true)
  chat
  chat clickable(&a[UNDO],run_command,/tr xph daily come back,&aUndo)
  chat &e&m{br}
}

trigger other(<list=XPHelper>xph daily come back) {
  chat &e&m{br}
  chat &aUndid dismissal.
  chat &e&m{br}
  {string[xph-dailydismissed]}.save(false)
}

trigger chat(<list=XPHelper><c>&r&6Click the link to visit our website and claim your reward: &r&b{string[HV-URL]}&r) {
  if ({string[xph-deliveryopen]} == true)
	chat &aAutomatically opening the reward link.
	url {string[HV-URL]}
  end
}

trigger chat(<list=XPHelper>&aToday's voting link is &r&b{string[HV-vote]1}&r&a!&r&a &aFollow the instructions on the website to redeem &95,000 XP &aand &63,000 Arcade Coins&a!&r) {
  if ({string[xph-deliveryopen]} == true)
    chat &aAutomatically opening the voting link.
	url http://{string[HV-vote]}
  end
}

// \n&r&aDon't Blink Challenge Completed!&r\n&r&7 &8+&32400&7&7 Hypixel Experience&r\n&r\n&r&7You can complete &e&e6 &7more challenges today.&r\n&r

// \n&r&aDaily Quest: Sniper Completed!&r\n&r&7 &8+&32500&7&7 Hypixel Experience&r\n&r&7 &8+&61750&7 &7Quakecraft Coins&r\n&r

// &aYou earned &r&e120 coins&r&a and &r&90 experience&r&a from VampireZ tips in the last minute!&r

// &r&aYou have successfully claimed &r&32,000 &r&3Hypixel &r&3Experience&r&a and &r&63,000 &r&6Arcade &r&6Coins&r&a!&r

// &6Thanks for supporting the server! You earned &r&95,000 XP&r&6 and 3,000 Arcade Coins!&r

// &fYou have claimed a &r&f&l[Common Smash Heroes Coins] &r&freward card!&r

// &fYou have claimed a &r&f&l[Common VampireZ Coins] &r&freward card!&r

// &fYou have claimed a &r&6&l[Legendary Hypixel EXP] &r&freward card!&r

// &r&d+25 Karma!&r